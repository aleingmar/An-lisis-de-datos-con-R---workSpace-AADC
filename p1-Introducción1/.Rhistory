maxAleIngles(vector)
# Esto es un comentario
print("Hola")
5+3
# Creamos un primer vector {3, 5, -7, 8, 9}
v<-c(3,5,-7,8,9)
# Lo visualizamos
# print(v)
w = c(13,15,0)
# Lo visualizamos
print(w)
# Primer elemento
w[1]
# w[0] No salta excepcion pero no es el primer elemento
# Poner nombres a las variables
names(v)<- c('a','b','c','d','e')
v
# Operaciones con vectores
sum(v)
v[-1]
v[2:4]
#v[:4]
#v[4:]
# Para crear el trozo de codigo ctrl+alt+i
# Construimos una matriz
m1<-matrix(c(1,2,3,4,5,6,7,8,9), byrow = TRUE, nrow = 3)
# Le paso el vector, le digo que las rellene por filas y numero de filas
m1
m2<-matrix(c(1,2,3,4,5,6,7,8,9), n = 3)
res=0
vector= c(1,2,3,4,2,7,1)
maxAleIngles<-(vector){
# Esto es un comentario
print("Hola")
5+3
# Creamos un primer vector {3, 5, -7, 8, 9}
v<-c(3,5,-7,8,9)
# Lo visualizamos
# print(v)
w = c(13,15,0)
# Lo visualizamos
print(w)
# Primer elemento
w[1]
# w[0] No salta excepcion pero no es el primer elemento
# Poner nombres a las variables
names(v)<- c('a','b','c','d','e')
v
# Operaciones con vectores
sum(v)
v[-1]
v[2:4]
#v[:4]
#v[4:]
# Para crear el trozo de codigo ctrl+alt+i
# Construimos una matriz
m1<-matrix(c(1,2,3,4,5,6,7,8,9), byrow = TRUE, nrow = 3)
# Le paso el vector, le digo que las rellene por filas y numero de filas
m1
m2<-matrix(c(1,2,3,4,5,6,7,8,9), n = 3)
# Esto es un comentario
print("Hola")
5+3
# Creamos un primer vector {3, 5, -7, 8, 9}
v<-c(3,5,-7,8,9)
# Lo visualizamos
# print(v)
w = c(13,15,0)
# Lo visualizamos
print(w)
# Primer elemento
w[1]
# w[0] No salta excepcion pero no es el primer elemento
# Poner nombres a las variables
names(v)<- c('a','b','c','d','e')
v
# Operaciones con vectores
sum(v)
v[-1]
v[2:4]
#v[:4]
#v[4:]
# Para crear el trozo de codigo ctrl+alt+i
# Construimos una matriz
m1<-matrix(c(1,2,3,4,5,6,7,8,9), byrow = TRUE, nrow = 3)
# Le paso el vector, le digo que las rellene por filas y numero de filas
m1
m2<-matrix(c(1,2,3,4,5,6,7,8,9), n = 3)
res=0
v<-c(1,2,3,4,2,7,1)
maxAleIngles<-(vector){
res=0
v4<-c(1,2,3,4,2,7,1)
maxAleIngles<-(vector){
# Esto es un comentario
print("Hola")
5+3
# Creamos un primer vector {3, 5, -7, 8, 9}
v<-c(3,5,-7,8,9)
# Lo visualizamos
# print(v)
w = c(13,15,0)
# Lo visualizamos
print(w)
# Primer elemento
w[1]
# w[0] No salta excepcion pero no es el primer elemento
# Poner nombres a las variables
names(v)<- c('a','b','c','d','e')
v
# Operaciones con vectores
sum(v)
v[-1]
v[2:4]
#v[:4]
#v[4:]
# Para crear el trozo de codigo ctrl+alt+i
# Construimos una matriz
m1<-matrix(c(1,2,3,4,5,6,7,8,9), byrow = TRUE, nrow = 3)
# Le paso el vector, le digo que las rellene por filas y numero de filas
m1
m2<-matrix(c(1,2,3,4,5,6,7,8,9), n = 3)
res<-0
v4<-c(1,2,3,4,2,7,1)
maxAleIngles<-(vector){
res<-0
v4<-c(1,2,3,4,2,7,1)
maxAleIngles<-(vector){
res<-0
v4<-c(1,2,3,4,2,7,1)
maxAleIngles<-function(vector){
for (e in vector) {
if (e>res){
res<-e
}
}
return (res)
}
maxAleIngles(v4)
res<-0
v4<-c(1,2,3,4,2,7,1)
maxAleIngles<-function(vector){
for (e in vector) {
if (e>res){
res<-e
}
}
return (res)
}
maxAleIngles(v4)
# Esto es un comentario
print("Hola")
5+3
# Creamos un primero vector {3,5,-7,8,9}
v<-c(3,5,-7,8,9)
# Lo visualizamos
#print(v)
v
w = c(13,15,0)
w
# Primer elemento
w[1]
# Poner nombres a las variables
names(v)<-c('a','b','c','d','e')
v
# Operaciones con vectores:
sum(v)
v
v[-1]
v[2:4]
#v[:4]
#v[4:]
# Construimos una matriz
m1<-matrix(c(1,2,3,4,5,6,7,8,9), byrow = TRUE, nrow = 3)
m1
# Accede al elemento dila 1 y columna 1
m1[1,1]
# Seleccionar toda la primera fila
m1[1,]
# Seleccionar toda la primera columna
m1[,1]
# Operaciones con matrices: transponer
m1
t(m1)
# Construcción directa
f1<-c('a','b','c')
f2<-c(1.2,3.5,7.8)
f3<-c(1.0,4.5,5.2)
df<-data.frame(f1,f2,f3)
df
# El tipo asociado
# type(df) ...en Python se usa para saber el tipo
class(df)
# Operaciones
dim(df)
str(df)
# Carga de un conjunto de datos en un dataframe
df2<-iris
df2
dim(df2) # Para ver la dimensión
str(df2) # Para ver la estructura
head(df2, n=3) # Cabecera
tail(df2, n=3) # La parte del final
df2[,1] # Primera columna (acceso como en las matrices)
df2$Sepal.Length # Primera columna
# Construcción directa
f1<-c('a','b','c')
f2<-c(1.2,3.5,7.8)
f3<-c(1.0,4.5,5.2)
df<-data.frame(f1,f2,f3)
df
# El tipo asociado
# type(df) ...en Python se usa para saber el tipo
class(df)
# Operaciones
dim(df)
str(df)
# Carga de un conjunto de datos en un dataframe
df2<-iris
df2
dim(df2) # Para ver la dimensión
str(df2) # Para ver la estructura
head(df2, n=3) # Cabecera
tail(df2, n=3) # La parte del final
df2[,1] # Primera columna (acceso como en las matrices)
df2$Sepal.Length # Primera columna
lista_aux <- list(v,m1,df)
lista_aux
class(lista_aux)
#
aux<-c(rep("zuriñe",2),rep("juan",4),rep("maria",5))
aux
#
aux_f <- factor(aux)
aux_f
#
class(aux)
class(aux_f)
#
summary(aux)
summary(aux_f)
# Instalar un paquete  (si ya está instalado no hace falta)
# install.packages("dplyr")
# Cargar la librería o importar el paquete
library(dplyr)
# Saber donde está cargada la sesión de R
getwd()
# setwd( ... ) Sirve para cambiar el lugar de la sesión
#df3<-read.csv("pruebra.txt")
res<-0
v4<-c(1,2,3,4,2,7,1)
maxAleIngles<-function(vector){
for (e in vector) {
if (e>res){
res<-e
}
}
return (res)
}
maxAleIngles(v4)
